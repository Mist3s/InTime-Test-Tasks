version: '3.9'

volumes:
  pg_data:
  static:
  pgadmin_data:
  rabbitmq_data:
    driver: local
  celery_data:
    driver: local

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - '15672:15672'
      - '5672:5672'
    env_file: .env
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "status" ]
      interval: 25s
      timeout: 15s
      retries: 3
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
  db_host:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
  pgadmin:
    image: "dpage/pgadmin4:latest"
    env_file: .env
    ports:
      # Map host port 5050 to container port 80
      - "5050:80"
    volumes:
      # Mount a volume to persist pgAdmin 4 data
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      # Ensure that this service starts after 'db'
      - db_host
  backend:
    build: ./backend/
    env_file: .env
    volumes:
      - static:/static/
    depends_on:
      - db_host
      - rabbitmq
  celery:
    build: ./backend/
    command: celery -A backend worker -l info
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file: .env
    volumes:
      - celery_data:/celery
  flower:
    image: "mher/flower:0.9.7"
    command: [
      'flower',
      '--broker=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq',
      '--broker_api=http://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:15672/api/',
      '--port=5555',
    ]
    ports:
      - '5555:5555'
    depends_on:
      - celery
    env_file: .env
  gateway:
    build: ./infra/
    env_file: .env
    ports:
      - '8000:80'
    volumes:
      - static:/static/
    depends_on:
      - backend
      - rabbitmq
      - celery